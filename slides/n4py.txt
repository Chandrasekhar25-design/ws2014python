NetCDF4 Python
===============


The netCDF4 package
===================

Summarise the package here


My First netCDF File
====================

Import the ``netCDF4`` package and create a new file:

  .. code:: python

     import netCDF4

     latlon = netCDF4.Dataset('latlon.nc', 'w',
                              format='NETCDF4')
     latlon.close()

Inspect your (empty) file with ``ncdump`` (or Panoply).


File mode options
=================

Syntax is similar (but not identical) to ``libc`` usage

- ``'r'``: Read-only (do not modify file)
- ``'w'``: Create a new file (and delete existing)
- ``'a'``: Append to existing file
- ``'r+'``: Read and write existing file


netCDF File Formats
===================

Some models require older netCDF formats:

* ``'NETCDF4'``: Standard netCDF4 format (default)

* ``'NETCDF4_CLASSIC'`` netCDF4 format, but netCDF3-compatible

* ``'NETCDF3_64BIT'``: Standard netCDF3, with >2GiB support

* ``'NETCDF3_CLASSIC'``: Standard netCDF3, 2GiB limit


Creating data
=============

Two-stage approach:

1. Create dimensions and register variables

2. Write data to variables


Creating new dimensions
=======================

Create 5-degree resolution global latitude and longitude dimensions and an
unlimited time axis:

.. code:: python

   latlon = nc.Dataset('latlon.nc', 'w')

   lat_d = latlon.createDimension('latitude', 37)
   lon_d = latlon.createDimension('longitude', 73)
   time_d = latlon.createDimension('time', None)


Creating new variables
======================

Create variables which map to the dimensions:

.. code:: python

   lat_nc = latlon.createVariable('latitude', 'f8', ('latitude',))
   lon_nc = latlon.createVariable('longitude', 'f8', ('longitude',))
   time_nc = latlon.createVariable('time', 'f8', ('time',))


Write Variables
===============
TODO


Exercise
========
TODO


Other Topics
============

* netCDF Groups

* Multi-file reads (non-``NETCDF4`` format)

* Chunking, Contiguous

* Compression

* Variable-length (vlen) arrays
